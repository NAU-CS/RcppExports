// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sbfc_cpp
List sbfc_cpp(SEXP TrainX, SEXP TrainY, SEXP TestX, SEXP TestY, SEXP nstep, int thin, int burnin_denom, bool cv, bool thinoutputs);
RcppExport SEXP _sbfc_sbfc_cpp(SEXP TrainXSEXP, SEXP TrainYSEXP, SEXP TestXSEXP, SEXP TestYSEXP, SEXP nstepSEXP, SEXP thinSEXP, SEXP burnin_denomSEXP, SEXP cvSEXP, SEXP thinoutputsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type TrainX(TrainXSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TrainY(TrainYSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestX(TestXSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestY(TestYSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type burnin_denom(burnin_denomSEXP);
    Rcpp::traits::input_parameter< bool >::type cv(cvSEXP);
    Rcpp::traits::input_parameter< bool >::type thinoutputs(thinoutputsSEXP);
    rcpp_result_gen = Rcpp::wrap(sbfc_cpp(TrainX, TrainY, TestX, TestY, nstep, thin, burnin_denom, cv, thinoutputs));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sbfc_sbfc_cpp", (DL_FUNC) &_sbfc_sbfc_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_sbfc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
