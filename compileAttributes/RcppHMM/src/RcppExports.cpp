// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// initHMM
SEXP initHMM(SEXP n, SEXP m);
RcppExport SEXP _RcppHMM_initHMM(SEXP nSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(initHMM(n, m));
    return rcpp_result_gen;
END_RCPP
}
// initGHMM
SEXP initGHMM(SEXP n, SEXP m);
RcppExport SEXP _RcppHMM_initGHMM(SEXP nSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(initGHMM(n, m));
    return rcpp_result_gen;
END_RCPP
}
// initPHMM
SEXP initPHMM(SEXP n);
RcppExport SEXP _RcppHMM_initPHMM(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(initPHMM(n));
    return rcpp_result_gen;
END_RCPP
}
// verifyModel
SEXP verifyModel(SEXP model);
RcppExport SEXP _RcppHMM_verifyModel(SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(verifyModel(model));
    return rcpp_result_gen;
END_RCPP
}
// setNames
SEXP setNames(SEXP hmm, SEXP names);
RcppExport SEXP _RcppHMM_setNames(SEXP hmmSEXP, SEXP namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type names(namesSEXP);
    rcpp_result_gen = Rcpp::wrap(setNames(hmm, names));
    return rcpp_result_gen;
END_RCPP
}
// setParameters
SEXP setParameters(SEXP hmm, SEXP params);
RcppExport SEXP _RcppHMM_setParameters(SEXP hmmSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(setParameters(hmm, params));
    return rcpp_result_gen;
END_RCPP
}
// evaluation
SEXP evaluation(SEXP hmm, SEXP sequence, SEXP method);
RcppExport SEXP _RcppHMM_evaluation(SEXP hmmSEXP, SEXP sequenceSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequence(sequenceSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluation(hmm, sequence, method));
    return rcpp_result_gen;
END_RCPP
}
// viterbi
SEXP viterbi(SEXP hmm, SEXP sequence);
RcppExport SEXP _RcppHMM_viterbi(SEXP hmmSEXP, SEXP sequenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequence(sequenceSEXP);
    rcpp_result_gen = Rcpp::wrap(viterbi(hmm, sequence));
    return rcpp_result_gen;
END_RCPP
}
// forwardBackward
SEXP forwardBackward(SEXP hmm, SEXP sequence);
RcppExport SEXP _RcppHMM_forwardBackward(SEXP hmmSEXP, SEXP sequenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequence(sequenceSEXP);
    rcpp_result_gen = Rcpp::wrap(forwardBackward(hmm, sequence));
    return rcpp_result_gen;
END_RCPP
}
// loglikelihood
SEXP loglikelihood(SEXP hmm, SEXP sequences);
RcppExport SEXP _RcppHMM_loglikelihood(SEXP hmmSEXP, SEXP sequencesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequences(sequencesSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikelihood(hmm, sequences));
    return rcpp_result_gen;
END_RCPP
}
// learnEM
SEXP learnEM(SEXP hmm, SEXP sequences, SEXP iter, SEXP delta, SEXP pseudo, SEXP print);
RcppExport SEXP _RcppHMM_learnEM(SEXP hmmSEXP, SEXP sequencesSEXP, SEXP iterSEXP, SEXP deltaSEXP, SEXP pseudoSEXP, SEXP printSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pseudo(pseudoSEXP);
    Rcpp::traits::input_parameter< SEXP >::type print(printSEXP);
    rcpp_result_gen = Rcpp::wrap(learnEM(hmm, sequences, iter, delta, pseudo, print));
    return rcpp_result_gen;
END_RCPP
}
// learnBW
SEXP learnBW(SEXP hmm, SEXP sequences, SEXP iter, SEXP delta, SEXP pseudo, SEXP print);
RcppExport SEXP _RcppHMM_learnBW(SEXP hmmSEXP, SEXP sequencesSEXP, SEXP iterSEXP, SEXP deltaSEXP, SEXP pseudoSEXP, SEXP printSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pseudo(pseudoSEXP);
    Rcpp::traits::input_parameter< SEXP >::type print(printSEXP);
    rcpp_result_gen = Rcpp::wrap(learnBW(hmm, sequences, iter, delta, pseudo, print));
    return rcpp_result_gen;
END_RCPP
}
// generateObservations
SEXP generateObservations(SEXP hmm, SEXP length);
RcppExport SEXP _RcppHMM_generateObservations(SEXP hmmSEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type hmm(hmmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type length(lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(generateObservations(hmm, length));
    return rcpp_result_gen;
END_RCPP
}
