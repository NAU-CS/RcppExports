// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// forceScheme
arma::mat forceScheme(const arma::mat& D, arma::mat& Y, int max_iter, double tol, double fraction, double EPSILON);
RcppExport SEXP _mp_forceScheme(SEXP DSEXP, SEXP YSEXP, SEXP max_iterSEXP, SEXP tolSEXP, SEXP fractionSEXP, SEXP EPSILONSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type fraction(fractionSEXP);
    Rcpp::traits::input_parameter< double >::type EPSILON(EPSILONSEXP);
    rcpp_result_gen = Rcpp::wrap(forceScheme(D, Y, max_iter, tol, fraction, EPSILON));
    return rcpp_result_gen;
END_RCPP
}
// lamp
arma::mat lamp(const arma::mat& X, const arma::uvec& RsampleIndices, const arma::mat& Ys, double cp);
RcppExport SEXP _mp_lamp(SEXP XSEXP, SEXP RsampleIndicesSEXP, SEXP YsSEXP, SEXP cpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type RsampleIndices(RsampleIndicesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ys(YsSEXP);
    Rcpp::traits::input_parameter< double >::type cp(cpSEXP);
    rcpp_result_gen = Rcpp::wrap(lamp(X, RsampleIndices, Ys, cp));
    return rcpp_result_gen;
END_RCPP
}
// tSNE
arma::mat tSNE(const arma::mat& X, const arma::mat& initialY, double perplexity, arma::uword k, arma::uword niter, bool isDist, double ETA, double INITIAL_MOMENTUM, double FINAL_MOMENTUM, double EARLY_EXAGGERATION, double GAIN_FRACTION, int MOMENTUM_THRESHOLD_ITER, int EXAGGERATION_THRESHOLD_ITER, int MAX_BINSEARCH_TRIES);
RcppExport SEXP _mp_tSNE(SEXP XSEXP, SEXP initialYSEXP, SEXP perplexitySEXP, SEXP kSEXP, SEXP niterSEXP, SEXP isDistSEXP, SEXP ETASEXP, SEXP INITIAL_MOMENTUMSEXP, SEXP FINAL_MOMENTUMSEXP, SEXP EARLY_EXAGGERATIONSEXP, SEXP GAIN_FRACTIONSEXP, SEXP MOMENTUM_THRESHOLD_ITERSEXP, SEXP EXAGGERATION_THRESHOLD_ITERSEXP, SEXP MAX_BINSEARCH_TRIESSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type initialY(initialYSEXP);
    Rcpp::traits::input_parameter< double >::type perplexity(perplexitySEXP);
    Rcpp::traits::input_parameter< arma::uword >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< bool >::type isDist(isDistSEXP);
    Rcpp::traits::input_parameter< double >::type ETA(ETASEXP);
    Rcpp::traits::input_parameter< double >::type INITIAL_MOMENTUM(INITIAL_MOMENTUMSEXP);
    Rcpp::traits::input_parameter< double >::type FINAL_MOMENTUM(FINAL_MOMENTUMSEXP);
    Rcpp::traits::input_parameter< double >::type EARLY_EXAGGERATION(EARLY_EXAGGERATIONSEXP);
    Rcpp::traits::input_parameter< double >::type GAIN_FRACTION(GAIN_FRACTIONSEXP);
    Rcpp::traits::input_parameter< int >::type MOMENTUM_THRESHOLD_ITER(MOMENTUM_THRESHOLD_ITERSEXP);
    Rcpp::traits::input_parameter< int >::type EXAGGERATION_THRESHOLD_ITER(EXAGGERATION_THRESHOLD_ITERSEXP);
    Rcpp::traits::input_parameter< int >::type MAX_BINSEARCH_TRIES(MAX_BINSEARCH_TRIESSEXP);
    rcpp_result_gen = Rcpp::wrap(tSNE(X, initialY, perplexity, k, niter, isDist, ETA, INITIAL_MOMENTUM, FINAL_MOMENTUM, EARLY_EXAGGERATION, GAIN_FRACTION, MOMENTUM_THRESHOLD_ITER, EXAGGERATION_THRESHOLD_ITER, MAX_BINSEARCH_TRIES));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP mp_forceScheme(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP mp_lamp(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP mp_tSNE(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_mp_forceScheme", (DL_FUNC) &_mp_forceScheme, 6},
    {"_mp_lamp", (DL_FUNC) &_mp_lamp, 4},
    {"_mp_tSNE", (DL_FUNC) &_mp_tSNE, 14},
    {"mp_forceScheme", (DL_FUNC) &mp_forceScheme,  6},
    {"mp_lamp",        (DL_FUNC) &mp_lamp,         4},
    {"mp_tSNE",        (DL_FUNC) &mp_tSNE,        14},
    {NULL, NULL, 0}
};

RcppExport void R_init_mp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
