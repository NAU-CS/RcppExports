// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bfslice_c
double bfslice_c(Rcpp::NumericVector z, Rcpp::NumericVector x, int zdim, int xdim, double lambda, double alpha);
RcppExport SEXP _dslice_bfslice_c(SEXP zSEXP, SEXP xSEXP, SEXP zdimSEXP, SEXP xdimSEXP, SEXP lambdaSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type zdim(zdimSEXP);
    Rcpp::traits::input_parameter< int >::type xdim(xdimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(bfslice_c(z, x, zdim, xdim, lambda, alpha));
    return rcpp_result_gen;
END_RCPP
}
// bfslice_eqp_c
double bfslice_eqp_c(Rcpp::NumericVector z, Rcpp::NumericVector x, int zdim, int xdim, double lambda, double alpha);
RcppExport SEXP _dslice_bfslice_eqp_c(SEXP zSEXP, SEXP xSEXP, SEXP zdimSEXP, SEXP xdimSEXP, SEXP lambdaSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type zdim(zdimSEXP);
    Rcpp::traits::input_parameter< int >::type xdim(xdimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(bfslice_eqp_c(z, x, zdim, xdim, lambda, alpha));
    return rcpp_result_gen;
END_RCPP
}
// bfslice_eqp_u
double bfslice_eqp_u(Rcpp::NumericVector x, int dim, double lambda, double alpha);
RcppExport SEXP _dslice_bfslice_eqp_u(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(bfslice_eqp_u(x, dim, lambda, alpha));
    return rcpp_result_gen;
END_RCPP
}
// bfslice_u
double bfslice_u(Rcpp::NumericVector x, int dim, double lambda, double alpha);
RcppExport SEXP _dslice_bfslice_u(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(bfslice_u(x, dim, lambda, alpha));
    return rcpp_result_gen;
END_RCPP
}
// ds_1
double ds_1(Rcpp::NumericVector y, double lambda, double alpha);
RcppExport SEXP _dslice_ds_1(SEXP ySEXP, SEXP lambdaSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(ds_1(y, lambda, alpha));
    return rcpp_result_gen;
END_RCPP
}
// ds_eqp_1
double ds_eqp_1(Rcpp::NumericVector y, double lambda);
RcppExport SEXP _dslice_ds_eqp_1(SEXP ySEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(ds_eqp_1(y, lambda));
    return rcpp_result_gen;
END_RCPP
}
// ds_eqp_k
double ds_eqp_k(Rcpp::NumericVector x, int dim, double lambda);
RcppExport SEXP _dslice_ds_eqp_k(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(ds_eqp_k(x, dim, lambda));
    return rcpp_result_gen;
END_RCPP
}
// ds_k
double ds_k(Rcpp::NumericVector x, int dim, double lambda);
RcppExport SEXP _dslice_ds_k(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(ds_k(x, dim, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dslice_eqp_k
Rcpp::List dslice_eqp_k(Rcpp::NumericVector x, int dim, double lambda);
RcppExport SEXP _dslice_dslice_eqp_k(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dslice_eqp_k(x, dim, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dslice_k
Rcpp::List dslice_k(Rcpp::NumericVector x, int dim, double lambda);
RcppExport SEXP _dslice_dslice_k(SEXP xSEXP, SEXP dimSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dslice_k(x, dim, lambda));
    return rcpp_result_gen;
END_RCPP
}
