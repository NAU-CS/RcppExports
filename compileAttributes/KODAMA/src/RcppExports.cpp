// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// knn_Armadillo
List knn_Armadillo(arma::mat Xtrain, arma::mat Xtest, int k);
RcppExport SEXP _KODAMA_knn_Armadillo(SEXP XtrainSEXP, SEXP XtestSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(knn_Armadillo(Xtrain, Xtest, k));
    return rcpp_result_gen;
END_RCPP
}
// floyd
arma::mat floyd(arma::mat data);
RcppExport SEXP _KODAMA_floyd(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(floyd(data));
    return rcpp_result_gen;
END_RCPP
}
// knn_kodama_c
arma::imat knn_kodama_c(arma::mat Xtrain, arma::ivec Ytrain, arma::mat Xtest, int k, int scaling);
RcppExport SEXP _KODAMA_knn_kodama_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP, SEXP kSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(knn_kodama_c(Xtrain, Ytrain, Xtest, k, scaling));
    return rcpp_result_gen;
END_RCPP
}
// knn_kodama_r
arma::mat knn_kodama_r(arma::mat Xtrain, arma::vec Ytrain, arma::mat Xtest, int k, int scaling);
RcppExport SEXP _KODAMA_knn_kodama_r(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP, SEXP kSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(knn_kodama_r(Xtrain, Ytrain, Xtest, k, scaling));
    return rcpp_result_gen;
END_RCPP
}
// samm_cpp
arma::mat samm_cpp(arma::mat x, arma::mat y, int k);
RcppExport SEXP _KODAMA_samm_cpp(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(samm_cpp(x, y, k));
    return rcpp_result_gen;
END_RCPP
}
// KNNCV
arma::ivec KNNCV(arma::mat x, arma::ivec cl, arma::ivec constrain, int k);
RcppExport SEXP _KODAMA_KNNCV(SEXP xSEXP, SEXP clSEXP, SEXP constrainSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type cl(clSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(KNNCV(x, cl, constrain, k));
    return rcpp_result_gen;
END_RCPP
}
// transformy
arma::mat transformy(arma::ivec y);
RcppExport SEXP _KODAMA_transformy(SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::ivec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(transformy(y));
    return rcpp_result_gen;
END_RCPP
}
// PLSDACV
arma::ivec PLSDACV(arma::mat x, arma::ivec cl, arma::ivec constrain, int k);
RcppExport SEXP _KODAMA_PLSDACV(SEXP xSEXP, SEXP clSEXP, SEXP constrainSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type cl(clSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(PLSDACV(x, cl, constrain, k));
    return rcpp_result_gen;
END_RCPP
}
// pls_kodama
List pls_kodama(arma::mat Xtrain, arma::mat Ytrain, arma::mat Xtest, int ncomp, int scaling);
RcppExport SEXP _KODAMA_pls_kodama(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP, SEXP ncompSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(pls_kodama(Xtrain, Ytrain, Xtest, ncomp, scaling));
    return rcpp_result_gen;
END_RCPP
}
// unic
int unic(arma::mat x);
RcppExport SEXP _KODAMA_unic(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(unic(x));
    return rcpp_result_gen;
END_RCPP
}
// RQ
double RQ(arma::vec yData, arma::vec yPred);
RcppExport SEXP _KODAMA_RQ(SEXP yDataSEXP, SEXP yPredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type yData(yDataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yPred(yPredSEXP);
    rcpp_result_gen = Rcpp::wrap(RQ(yData, yPred));
    return rcpp_result_gen;
END_RCPP
}
// optim_pls_cv
List optim_pls_cv(arma::mat x, arma::mat clmatrix, arma::ivec constrain, int ncomp, int scaling);
RcppExport SEXP _KODAMA_optim_pls_cv(SEXP xSEXP, SEXP clmatrixSEXP, SEXP constrainSEXP, SEXP ncompSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type clmatrix(clmatrixSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_pls_cv(x, clmatrix, constrain, ncomp, scaling));
    return rcpp_result_gen;
END_RCPP
}
// optim_knn_r_cv
List optim_knn_r_cv(arma::mat x, arma::vec clmatrix, arma::ivec constrain, int ncomp, int scaling);
RcppExport SEXP _KODAMA_optim_knn_r_cv(SEXP xSEXP, SEXP clmatrixSEXP, SEXP constrainSEXP, SEXP ncompSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type clmatrix(clmatrixSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_knn_r_cv(x, clmatrix, constrain, ncomp, scaling));
    return rcpp_result_gen;
END_RCPP
}
// optim_knn_c_cv
List optim_knn_c_cv(arma::mat x, arma::ivec clmatrix, arma::ivec constrain, int ncomp, int scaling);
RcppExport SEXP _KODAMA_optim_knn_c_cv(SEXP xSEXP, SEXP clmatrixSEXP, SEXP constrainSEXP, SEXP ncompSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type clmatrix(clmatrixSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_knn_c_cv(x, clmatrix, constrain, ncomp, scaling));
    return rcpp_result_gen;
END_RCPP
}
// double_pls_cv
List double_pls_cv(arma::mat x, arma::mat y, arma::ivec constrain, int type, int verbose, int compmax, int opt, int scaling);
RcppExport SEXP _KODAMA_double_pls_cv(SEXP xSEXP, SEXP ySEXP, SEXP constrainSEXP, SEXP typeSEXP, SEXP verboseSEXP, SEXP compmaxSEXP, SEXP optSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type compmax(compmaxSEXP);
    Rcpp::traits::input_parameter< int >::type opt(optSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(double_pls_cv(x, y, constrain, type, verbose, compmax, opt, scaling));
    return rcpp_result_gen;
END_RCPP
}
// double_knn_cv
List double_knn_cv(arma::mat x, arma::vec yy, arma::ivec constrain, int type, int verbose, int compmax, int opt, int scaling);
RcppExport SEXP _KODAMA_double_knn_cv(SEXP xSEXP, SEXP yySEXP, SEXP constrainSEXP, SEXP typeSEXP, SEXP verboseSEXP, SEXP compmaxSEXP, SEXP optSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yy(yySEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type compmax(compmaxSEXP);
    Rcpp::traits::input_parameter< int >::type opt(optSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(double_knn_cv(x, yy, constrain, type, verbose, compmax, opt, scaling));
    return rcpp_result_gen;
END_RCPP
}
// corecpp
List corecpp(arma::mat x, arma::mat xTdata, arma::ivec clbest, const int Tcycle, int FUN, int fpar, arma::ivec constrain, NumericVector fix, bool shake, int proj);
RcppExport SEXP _KODAMA_corecpp(SEXP xSEXP, SEXP xTdataSEXP, SEXP clbestSEXP, SEXP TcycleSEXP, SEXP FUNSEXP, SEXP fparSEXP, SEXP constrainSEXP, SEXP fixSEXP, SEXP shakeSEXP, SEXP projSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xTdata(xTdataSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type clbest(clbestSEXP);
    Rcpp::traits::input_parameter< const int >::type Tcycle(TcycleSEXP);
    Rcpp::traits::input_parameter< int >::type FUN(FUNSEXP);
    Rcpp::traits::input_parameter< int >::type fpar(fparSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fix(fixSEXP);
    Rcpp::traits::input_parameter< bool >::type shake(shakeSEXP);
    Rcpp::traits::input_parameter< int >::type proj(projSEXP);
    rcpp_result_gen = Rcpp::wrap(corecpp(x, xTdata, clbest, Tcycle, FUN, fpar, constrain, fix, shake, proj));
    return rcpp_result_gen;
END_RCPP
}
// another
List another(arma::mat pptrain, arma::mat xtrain, arma::mat xtest, arma::mat res, arma::mat Xlink, double epsilon);
RcppExport SEXP _KODAMA_another(SEXP pptrainSEXP, SEXP xtrainSEXP, SEXP xtestSEXP, SEXP resSEXP, SEXP XlinkSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pptrain(pptrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtrain(xtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtest(xtestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type res(resSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xlink(XlinkSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(another(pptrain, xtrain, xtest, res, Xlink, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// svm_kodama
List svm_kodama(arma::mat Xtrain, arma::vec Ytrain, arma::mat Xtest, arma::ivec ncomp, int scaling, int svm_type, arma::mat parameter);
RcppExport SEXP _KODAMA_svm_kodama(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP, SEXP ncompSEXP, SEXP scalingSEXP, SEXP svm_typeSEXP, SEXP parameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    Rcpp::traits::input_parameter< int >::type svm_type(svm_typeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type parameter(parameterSEXP);
    rcpp_result_gen = Rcpp::wrap(svm_kodama(Xtrain, Ytrain, Xtest, ncomp, scaling, svm_type, parameter));
    return rcpp_result_gen;
END_RCPP
}
// optim_svm_cv
List optim_svm_cv(arma::mat xData, arma::vec yData, arma::ivec constrain, arma::ivec ncomp, int scaling, int svm_type, arma::mat parameter);
RcppExport SEXP _KODAMA_optim_svm_cv(SEXP xDataSEXP, SEXP yDataSEXP, SEXP constrainSEXP, SEXP ncompSEXP, SEXP scalingSEXP, SEXP svm_typeSEXP, SEXP parameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xData(xDataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yData(yDataSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    Rcpp::traits::input_parameter< int >::type svm_type(svm_typeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type parameter(parameterSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_svm_cv(xData, yData, constrain, ncomp, scaling, svm_type, parameter));
    return rcpp_result_gen;
END_RCPP
}
// svm_double_cv
List svm_double_cv(arma::mat xData, arma::vec yData, arma::ivec constrain, arma::ivec ncomp, int scaling, int svm_type, arma::mat parameter, int timesCV);
RcppExport SEXP _KODAMA_svm_double_cv(SEXP xDataSEXP, SEXP yDataSEXP, SEXP constrainSEXP, SEXP ncompSEXP, SEXP scalingSEXP, SEXP svm_typeSEXP, SEXP parameterSEXP, SEXP timesCVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xData(xDataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yData(yDataSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type constrain(constrainSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type scaling(scalingSEXP);
    Rcpp::traits::input_parameter< int >::type svm_type(svm_typeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type parameter(parameterSEXP);
    Rcpp::traits::input_parameter< int >::type timesCV(timesCVSEXP);
    rcpp_result_gen = Rcpp::wrap(svm_double_cv(xData, yData, constrain, ncomp, scaling, svm_type, parameter, timesCV));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KODAMA_knn_Armadillo", (DL_FUNC) &_KODAMA_knn_Armadillo, 3},
    {"_KODAMA_floyd", (DL_FUNC) &_KODAMA_floyd, 1},
    {"_KODAMA_knn_kodama_c", (DL_FUNC) &_KODAMA_knn_kodama_c, 5},
    {"_KODAMA_knn_kodama_r", (DL_FUNC) &_KODAMA_knn_kodama_r, 5},
    {"_KODAMA_samm_cpp", (DL_FUNC) &_KODAMA_samm_cpp, 3},
    {"_KODAMA_KNNCV", (DL_FUNC) &_KODAMA_KNNCV, 4},
    {"_KODAMA_transformy", (DL_FUNC) &_KODAMA_transformy, 1},
    {"_KODAMA_PLSDACV", (DL_FUNC) &_KODAMA_PLSDACV, 4},
    {"_KODAMA_pls_kodama", (DL_FUNC) &_KODAMA_pls_kodama, 5},
    {"_KODAMA_unic", (DL_FUNC) &_KODAMA_unic, 1},
    {"_KODAMA_RQ", (DL_FUNC) &_KODAMA_RQ, 2},
    {"_KODAMA_optim_pls_cv", (DL_FUNC) &_KODAMA_optim_pls_cv, 5},
    {"_KODAMA_optim_knn_r_cv", (DL_FUNC) &_KODAMA_optim_knn_r_cv, 5},
    {"_KODAMA_optim_knn_c_cv", (DL_FUNC) &_KODAMA_optim_knn_c_cv, 5},
    {"_KODAMA_double_pls_cv", (DL_FUNC) &_KODAMA_double_pls_cv, 8},
    {"_KODAMA_double_knn_cv", (DL_FUNC) &_KODAMA_double_knn_cv, 8},
    {"_KODAMA_corecpp", (DL_FUNC) &_KODAMA_corecpp, 10},
    {"_KODAMA_another", (DL_FUNC) &_KODAMA_another, 6},
    {"_KODAMA_svm_kodama", (DL_FUNC) &_KODAMA_svm_kodama, 7},
    {"_KODAMA_optim_svm_cv", (DL_FUNC) &_KODAMA_optim_svm_cv, 7},
    {"_KODAMA_svm_double_cv", (DL_FUNC) &_KODAMA_svm_double_cv, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_KODAMA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
